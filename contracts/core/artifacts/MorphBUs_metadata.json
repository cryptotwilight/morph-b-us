{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IMBURegister",
						"name": "_register",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "follow",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_followId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_contentId",
						"type": "uint256"
					}
				],
				"name": "getContent",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "ipfsHash",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "author",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "authorName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "date",
								"type": "uint256"
							}
						],
						"internalType": "struct Content",
						"name": "_content",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFeed",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "_contentIds",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_followId",
						"type": "uint256"
					}
				],
				"name": "getFollow",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "targetName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "date",
								"type": "uint256"
							}
						],
						"internalType": "struct Follow",
						"name": "_follow",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFollowingCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_count",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFollows",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "_followIds",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_messageId",
						"type": "uint256"
					}
				],
				"name": "getMessage",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "fromName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "toName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ipfsHash",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "date",
								"type": "uint256"
							}
						],
						"internalType": "struct Message",
						"name": "_message",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMessages",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "messageIds",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_rewardAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_shareId",
						"type": "uint256"
					}
				],
				"name": "getShare",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "contentId",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "userIds",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256",
								"name": "date",
								"type": "uint256"
							}
						],
						"internalType": "struct Share",
						"name": "_share",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "isMorphNameAvailable",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_isAvailable",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "isMuted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_isMuted",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "mute",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_muteId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "notifyChangeOfAddress",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_acknowledged",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "ipfsHash",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "author",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "authorName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "date",
								"type": "uint256"
							}
						],
						"internalType": "struct Content",
						"name": "_content",
						"type": "tuple"
					}
				],
				"name": "post",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_contentId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "fromName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "toName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "ipfsHash",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "date",
								"type": "uint256"
							}
						],
						"internalType": "struct Message",
						"name": "_message",
						"type": "tuple"
					}
				],
				"name": "sendMessage",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_messageId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "setMorphName",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_contentId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "_ids",
						"type": "uint256[]"
					}
				],
				"name": "share",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_shareId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_contentIds",
						"type": "uint256[]"
					}
				],
				"name": "trimFeed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_trimId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_messageIds",
						"type": "uint256[]"
					}
				],
				"name": "trimMessages",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_trimmed",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "unfollow",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_unfollowed",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "unmute",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_unmuted",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/core/MorphBUs.sol": "MorphBUs"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/core/MorphBUs.sol": {
			"keccak256": "0x60ae107a52810414cc21f3c05de3ce0a9ca3afd80a23ad81560f61e52cb7859d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://c8a3f8b5b76d97181ecaa84bd905074709a399c1df15439ebc821118b8682979",
				"dweb:/ipfs/QmXeQoTsNHwbcMQRJbkGA99XNkPLTCBdYuZEEVhDPnfakm"
			]
		},
		"contracts/interfaces/IMBUContentManager.sol": {
			"keccak256": "0x5c7483f4d95c38b9d968f5003275008d3a851c77c55c451ce32321758da4f1cb",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://964497917e294c1b2e05582778536271ffe338a8d98643ce018d288dee5f6648",
				"dweb:/ipfs/QmZqLcZKDhxjwFE9PeUJm6punvpEcJHUFhZgVkNkzNNLmu"
			]
		},
		"contracts/interfaces/IMBUFeedManager.sol": {
			"keccak256": "0x5e4a240530a9224d6c0c68236a74689323bd94ab3d924f575ef134b6dea02d6b",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://8963856a5d6ac932ea15b1ffeb174b2a44e72391dd24a0bab69a427cb5437f69",
				"dweb:/ipfs/QmaFSsqEEPiQ8MZC8R7vYWbjMN46uzXRJzF5mvZ6LWnBfn"
			]
		},
		"contracts/interfaces/IMBUFollowsManager.sol": {
			"keccak256": "0x5b48883f29be8e1dac6e1b070bd35acadb7d7cba20ec1ace963fff2619380507",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://e3640ac0901d093dcd33161368a06a9a351538b5bec9d580823c7792e1700c68",
				"dweb:/ipfs/QmafFX9RQF4eEmhFC2ZvkhzWguox7kg8NSFSysQK6NLyqq"
			]
		},
		"contracts/interfaces/IMBUMessageManager.sol": {
			"keccak256": "0x497435d006db337af0fb30e3ac4b0b0f9e49ceb30791569e4e48ba14f680e62a",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://610a86f4e1b10115576bd64554295596cb68211a2152964afcea31001b63bd37",
				"dweb:/ipfs/QmR9PhvyiqFSj7p9DaSwdQJ16AW5eKP7MmQj6GD8JdqZkp"
			]
		},
		"contracts/interfaces/IMBUNameManager.sol": {
			"keccak256": "0x02c6eb5e7f9b6970f198c381dbfe94929db18715456c97d08975fdb6399b83f4",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://38837e3113cb88a5410c484c95f920e2774f6ac6bea154b8aa9a24bb1a90ee8f",
				"dweb:/ipfs/QmWFu6RTKR2C1VV2JZkBXVP35QHtjYnp6JThw4oQALfMqV"
			]
		},
		"contracts/interfaces/IMBURegister.sol": {
			"keccak256": "0x60c683981a022ef1be4a475fb15c119877aaf43edfb4238b9859da82a8616dfd",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://b7b1152cc0648cac7a026cf065489f0bc89e60e7a3bb5056094243198b6ea872",
				"dweb:/ipfs/QmZyiF8u4FJgS7azAtPES8YgfgwfgKrSEgm4o71mrnqbF8"
			]
		},
		"contracts/interfaces/IMBURewardsManager.sol": {
			"keccak256": "0x0b572bf849f4fdccc6ac47aa9fa30f4a73d69e15d0db4c7f8869d36dc23bcc91",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://7c013e94c24cfc5389b6bc06c5593a8c2918cc02cd2433e61f18b0c467dc95fa",
				"dweb:/ipfs/Qmb3ZCArckaGWWjkuJeJCXTr3YWo6DpZiJ13Xij2NhYx94"
			]
		},
		"contracts/interfaces/IMBUStructs.sol": {
			"keccak256": "0x32ec51d99bf7c78ce80b67c8d0239003e3baca39bf65335bd66b39ac6c3ffa3a",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://645f7d3ac2fbede624dffc6af746755aed296dc6e6173523addece1abbf919eb",
				"dweb:/ipfs/QmWy7YvSizuM82dSWqKoBR1YNpGaYyWfsMmfgNxyKmRZEc"
			]
		},
		"contracts/interfaces/IMorphBUs.sol": {
			"keccak256": "0xaca801131bdb6fea1a5d89c31bec41059e9fbf9b400a614902540069676ba8ca",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://28a3a2b200f811fb97137c0942e2ff9b14e46c2d915d92a59a7a869ff78d5267",
				"dweb:/ipfs/QmSon4Hk68FLLAN1iAerSza73DdG83CyLauCBKfgvExmQb"
			]
		}
	},
	"version": 1
}